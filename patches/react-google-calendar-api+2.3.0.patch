diff --git a/node_modules/react-google-calendar-api/dist/ApiCalendar.d.ts b/node_modules/react-google-calendar-api/dist/ApiCalendar.d.ts
index 0ca03ea..57c5342 100644
--- a/node_modules/react-google-calendar-api/dist/ApiCalendar.d.ts
+++ b/node_modules/react-google-calendar-api/dist/ApiCalendar.d.ts
@@ -21,6 +21,10 @@ declare class ApiCalendar {
     calendar: string;
     constructor(config: ConfigApiCalendar);
     get sign(): boolean;
+    tokenIssuedTime: number;
+    tokenExpiresIn: number;
+
+    private setTokenExpiry;
     /**
      * Auth to the google Api.
      */
@@ -30,11 +34,23 @@ declare class ApiCalendar {
      * And create gapi in global
      */
     private handleClientLoad;
+    
+    isTokenExpired(): boolean;
+
     /**
      * Sign in Google user account
      * @returns {Promise<void>} Promise resolved if authentication is successful, rejected if unsuccessful.
      */
     handleAuthClick(): Promise<void>;
+
+    /**
+     * Watch Calendar events
+     * @param {object} queryOptions to see
+     * @param {string} calendarId to see by default use the calendar attribute
+     * @returns {any}
+     */
+    watchEvents(queryOptions: object, calendarId?: string): any;
+
     /**
      * Set the default attribute calendar
      * @param {string} newCalendar
diff --git a/node_modules/react-google-calendar-api/dist/ApiCalendar.js b/node_modules/react-google-calendar-api/dist/ApiCalendar.js
index 64f8018..071251a 100644
--- a/node_modules/react-google-calendar-api/dist/ApiCalendar.js
+++ b/node_modules/react-google-calendar-api/dist/ApiCalendar.js
@@ -66,7 +66,7 @@ var ApiCalendar = class {
   constructor(config) {
     this.config = config;
     this.tokenClient = null;
-    this.onLoadCallback = null;
+    this.onLoadCallback = config.onLoadCallback ?? null;
     this.calendar = "primary";
     try {
       this.initGapiClient = this.initGapiClient.bind(this);
@@ -89,6 +89,13 @@ var ApiCalendar = class {
   get sign() {
     return !!this.tokenClient;
   }
+
+  isTokenExpired() {
+    const now = new Date().getTime();
+    return now >= (this.tokenIssuedTime + this.tokenExpiresIn);
+  }
+  
+  
   /**
    * Auth to the google Api.
    */
@@ -98,6 +105,21 @@ var ApiCalendar = class {
       discoveryDocs: this.config.discoveryDocs,
       hosted_domain: this.config.hosted_domain
     }).then(() => {
+      this.setCalendar(
+        "a6950e1b642d8663865fd2351d5107fae9e1537514f7e9d8b301364aa53d9568@group.calendar.google.com"
+      );
+      let storedTokenString = localStorage.getItem('googleAuthToken');
+      
+      if (storedTokenString) {
+        let storedToken = JSON.parse(storedTokenString);
+        gapi.auth.setToken(storedToken); 
+        this.tokenIssuedTime = new Date().getTime(); 
+        this.tokenExpiresIn = storedToken.expires_in * 1000;
+      
+        if (this.isTokenExpired()) {
+          gapi.auth.setToken(null);
+        } 
+      } 
       if (this.onLoadCallback) {
         this.onLoadCallback();
       }
@@ -133,6 +155,8 @@ var ApiCalendar = class {
       });
     });
   }
+  
+
   /**
    * Sign in Google user account
    * @returns {Promise<void>} Promise resolved if authentication is successful, rejected if unsuccessful.
@@ -145,6 +169,7 @@ var ApiCalendar = class {
             if (resp.error) {
               reject(resp);
             } else {
+              localStorage.setItem('googleAuthToken', JSON.stringify(resp));
               resolve(resp);
             }
           };
@@ -163,6 +188,20 @@ var ApiCalendar = class {
       }
     });
   }
+
+  watchEvents(queryOptions, calendarId = this.calendar) {
+        if (gapi) {
+          return gapi.client.request({
+           'path': '/calendar/v3/calendars/a6950e1b642d8663865fd2351d5107fae9e1537514f7e9d8b301364aa53d9568@group.calendar.google.com/events/watch',
+            'method': 'POST',
+            'body': queryOptions,
+         });
+        } else {
+          console.error("Error: gapi not loaded");
+          return false;
+        }
+      }
+
   /**
    * Set the default attribute calendar
    * @param {string} newCalendar
@@ -188,6 +227,7 @@ var ApiCalendar = class {
     if (gapi) {
       const token = gapi.client.getToken();
       if (token !== null) {
+        localStorage.removeItem('googleAuthToken');
         google.accounts.id.disableAutoSelect();
         google.accounts.oauth2.revoke(token.access_token, () => {
         });
